services:

  ##### Configure JSON-RPC method services

  # Configure Json-RPC method MethodA as simple service, it will be injected on custom resolver just below
  jsonrpc.method.a:
    class: DemoApp\Method\MethodA
  # Configure Json-RPC method MethodB as simple service, it will be injected on custom resolver just below
  jsonrpc.method.b:
    class: DemoApp\Method\MethodB
  # Configure Json-RPC method MethodC as simple service, it will be injected on custom resolver just below
  jsonrpc.method.c:
    class: DemoApp\Method\MethodC
  # Configure Json-RPC method MethodD as simple service, it will be injected on custom resolver just below
  jsonrpc.method.d:
    class: DemoApp\Method\MethodD

  ##### Configure your resolver (do not add the tag, service will be injected thanks to bundle configuration)
  jsonrpc.custom_method_resolver:
    class: DemoApp\Resolver\JsonRpcMethodResolver
    # Inject your JSON-RPC methods (They cannot be automatically injected as resolver implementation is on your own)
    calls:
      - method: 'addMethod'
        arguments:
            - '@jsonrpc.method.a'
            - 'customBundledMethodA'
      - method: 'addMethod'
        arguments:
            - '@jsonrpc.method.b'
            - 'customBundledMethodB'
      - method: 'addMethod'
        arguments:
            - '@jsonrpc.method.c'
            - 'customBundledMethodC'
      - method: 'addMethod'
        arguments:
            - '@jsonrpc.method.d'
            - 'customBundledMethodD'
