name: 'CI'
on: # rebuild any PRs and main branch changes
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches: [ master ]

concurrency:
  group: "CI-${{ github.head_ref }}"
  cancel-in-progress: true

env:
  # Cache params
  CACHE_VERSION: 2022061901 # To be able to create a new cache (YYYYMMDDXX)
  CI: 'true'
  COVERAGE_OUTPUT_STYLE: clover
  TEST_OUTPUT_STYLE: 'pretty'
  PHPCS_REPORT_STYLE: 'full'
  COMPOSER_OPTIONS: '--optimize-autoloader'

jobs:
  composer-require-checker:
    name: ComposerRequireChecker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer
        env:
          # Always use latest available patch for the version
          update: true
      - name: Build
        run: make build
      - name: ComposerRequireChecker
        uses: docker://webfactory/composer-require-checker:3.2.0

  tests:
    name: Tests / PHP ${{ matrix.php-version }} / Symfony ${{ matrix.symfony-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        php-version:
          - '7.2'
          - '7.4'
          - '8.0'
          - '8.1'
        symfony-version:
          - '4.4'
          - '5.4'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php-version }}'
          tools: composer
          coverage: xdebug
        env:
          # Always use latest available patch for the version
          update: true

      - name: Setup cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.composer
            ./vendor
          # Clear the cache if composer json (as composer.lock is in the repo) has been updated
          key: ${{ env.CACHE_VERSION }}-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}-${{ hashFiles('composer.json') }}

      - name: Build
        run: |
          composer require \
            symfony/http-foundation:^${{ matrix.symfony-version }} \
            symfony/http-kernel:^${{ matrix.symfony-version }} \
            symfony/config:^${{ matrix.symfony-version }} \
            symfony/dependency-injection:^${{ matrix.symfony-version }} \
            symfony/event-dispatcher:^${{ matrix.symfony-version }} \
            symfony/routing:^${{ matrix.symfony-version }} \
          && make build

      - name: Tests
        run: make test-unit && make test-functional

      # See the reports at https://codecov.io/gh/yoanm/symfony-jsonrpc-http-server
      - name: Upload unit tests coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          file: "build/coverage-phpunit/clover-unit.xml"
          name: "unit-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}"
          flags: "unit-tests,php-${{ matrix.php-version }},sf-${{ matrix.symfony-version }}+"
          fail_ci_if_error: true
          move_coverage_to_trash: true
      - name: Upload functional tests coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          name: "functional-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}"
          flags: "functional-tests,php-${{ matrix.php-version }},sf-${{ matrix.symfony-version }}+"
          fail_ci_if_error: true

  nightly-tests:
    name: Nightly / PHP ${{ matrix.php-version }} / Symfony ${{ matrix.symfony-version }}
    needs: [ tests ]
    runs-on: ubuntu-latest
    env:
      COMPOSER_OPTIONS: '--optimize-autoloader --ignore-platform-req=php+' # Ignore upper PHP bound requirement
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        php-version:
          - '8.2'
        symfony-version:
          - '4.4'
          - '5.4'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php-version }}'
          tools: composer
          coverage: xdebug
        env:
          # Always use latest available patch for the version
          update: true

      - name: Setup cache
        continue-on-error: true
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.composer
            ./vendor
          # Clear the cache if composer json (as composer.lock is in the repo) has been updated
          key: ${{ env.CACHE_VERSION }}-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}-${{ hashFiles('composer.json') }}

      - name: Build
        continue-on-error: true
        run: |
          composer require \
            symfony/http-foundation:^${{ matrix.symfony-version }} \
            symfony/http-kernel:^${{ matrix.symfony-version }} \
            symfony/config:^${{ matrix.symfony-version }} \
            symfony/dependency-injection:^${{ matrix.symfony-version }} \
            symfony/event-dispatcher:^${{ matrix.symfony-version }} \
            symfony/routing:^${{ matrix.symfony-version }} \
          && make build

      - name: Test
        continue-on-error: true
        run: make test-unit && make test-functional

      # See the reports at https://codecov.io/gh/yoanm/symfony-jsonrpc-http-server
      - name: Upload unit tests coverage to codecov
        uses: codecov/codecov-action@v2
        continue-on-error: true
        with:
          file: "build/coverage-phpunit/clover-unit.xml"
          name: "unit-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}"
          flags: "nightly,unit-tests,php-${{ matrix.php-version }},sf-${{ matrix.symfony-version }}+"
          fail_ci_if_error: false
          move_coverage_to_trash: true
      - name: Upload functional tests coverage to codecov
        continue-on-error: true
        uses: codecov/codecov-action@v2
        with:
          file: "build/coverage-phpunit/clover-functional.xml,build/coverage-behat/clover.xml"
          name: "functional-tests-${{ matrix.php-version }}-${{ matrix.symfony-version }}"
          flags: "nightly,functional-tests,php-${{ matrix.php-version }},sf-${{ matrix.symfony-version }}+"
          fail_ci_if_error: false
